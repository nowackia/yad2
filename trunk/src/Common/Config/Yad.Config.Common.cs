// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.4.0
// Schema file: dune.xsd
// Creation Date: 2007-11-24 17:51:52
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace Yad.Config.Common
{

	public struct Declarations
	{
		public const string SchemaVersion = "http://www.example.org/dune";
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class AmmoDataCollection : ArrayList
	{
		public Yad.Config.Common.AmmoData Add(Yad.Config.Common.AmmoData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.AmmoData Add()
		{
			return Add(new Yad.Config.Common.AmmoData());
		}

		public void Insert(int index, Yad.Config.Common.AmmoData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.AmmoData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.AmmoData this[int index]
		{
			get { return (Yad.Config.Common.AmmoData) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class TechnologyDependenceCollection : ArrayList
	{
		public Yad.Config.Common.TechnologyDependence Add(Yad.Config.Common.TechnologyDependence obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.TechnologyDependence Add()
		{
			return Add(new Yad.Config.Common.TechnologyDependence());
		}

		public void Insert(int index, Yad.Config.Common.TechnologyDependence obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.TechnologyDependence obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.TechnologyDependence this[int index]
		{
			get { return (Yad.Config.Common.TechnologyDependence) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class RaceDataCollection : ArrayList
	{
		public Yad.Config.Common.RaceData Add(Yad.Config.Common.RaceData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.RaceData Add()
		{
			return Add(new Yad.Config.Common.RaceData());
		}

		public void Insert(int index, Yad.Config.Common.RaceData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.RaceData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.RaceData this[int index]
		{
			get { return (Yad.Config.Common.RaceData) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitMCVDataCollection : ArrayList
	{
		public Yad.Config.Common.UnitMCVData Add(Yad.Config.Common.UnitMCVData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.UnitMCVData Add()
		{
			return Add(new Yad.Config.Common.UnitMCVData());
		}

		public void Insert(int index, Yad.Config.Common.UnitMCVData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.UnitMCVData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.UnitMCVData this[int index]
		{
			get { return (Yad.Config.Common.UnitMCVData) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class indexCollection : ArrayList
	{
		public short Add(short obj)
		{
			base.Add(obj);
			return obj;
		}

		public short Add()
		{
			return Add(new short());
		}

		public void Insert(int index, short obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(short obj)
		{
			base.Remove(obj);
		}

		new public short this[int index]
		{
			get { return (short) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitSandwormDataCollection : ArrayList
	{
		public Yad.Config.Common.UnitSandwormData Add(Yad.Config.Common.UnitSandwormData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.UnitSandwormData Add()
		{
			return Add(new Yad.Config.Common.UnitSandwormData());
		}

		public void Insert(int index, Yad.Config.Common.UnitSandwormData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.UnitSandwormData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.UnitSandwormData this[int index]
		{
			get { return (Yad.Config.Common.UnitSandwormData) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class NameCollection : ArrayList
	{
		public string Add(string obj)
		{
			base.Add(obj);
			return obj;
		}

		public void Insert(int index, string obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(string obj)
		{
			base.Remove(obj);
		}

		new public string this[int index]
		{
			get { return (string) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitHarvesterDataCollection : ArrayList
	{
		public Yad.Config.Common.UnitHarvesterData Add(Yad.Config.Common.UnitHarvesterData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.UnitHarvesterData Add()
		{
			return Add(new Yad.Config.Common.UnitHarvesterData());
		}

		public void Insert(int index, Yad.Config.Common.UnitHarvesterData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.UnitHarvesterData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.UnitHarvesterData this[int index]
		{
			get { return (Yad.Config.Common.UnitHarvesterData) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitTrooperDataCollection : ArrayList
	{
		public Yad.Config.Common.UnitTrooperData Add(Yad.Config.Common.UnitTrooperData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.UnitTrooperData Add()
		{
			return Add(new Yad.Config.Common.UnitTrooperData());
		}

		public void Insert(int index, Yad.Config.Common.UnitTrooperData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.UnitTrooperData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.UnitTrooperData this[int index]
		{
			get { return (Yad.Config.Common.UnitTrooperData) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class BuildingDataCollection : ArrayList
	{
		public Yad.Config.Common.BuildingData Add(Yad.Config.Common.BuildingData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.BuildingData Add()
		{
			return Add(new Yad.Config.Common.BuildingData());
		}

		public void Insert(int index, Yad.Config.Common.BuildingData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.BuildingData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.BuildingData this[int index]
		{
			get { return (Yad.Config.Common.BuildingData) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitTankDataCollection : ArrayList
	{
		public Yad.Config.Common.UnitTankData Add(Yad.Config.Common.UnitTankData obj)
		{
			base.Add(obj);
			return obj;
		}

		public Yad.Config.Common.UnitTankData Add()
		{
			return Add(new Yad.Config.Common.UnitTankData());
		}

		public void Insert(int index, Yad.Config.Common.UnitTankData obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Yad.Config.Common.UnitTankData obj)
		{
			base.Remove(obj);
		}

		new public Yad.Config.Common.UnitTankData this[int index]
		{
			get { return (Yad.Config.Common.UnitTankData) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlType(TypeName="UnitTrooperData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitTrooperData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="TypeKind",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeKind;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeKindSpecified;
		
		[XmlIgnore]
		public short TypeKind
		{ 
			get { return __TypeKind; }
			set { __TypeKind = value; __TypeKindSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(ElementName="Cost",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Cost;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CostSpecified;
		
		[XmlIgnore]
		public short Cost
		{ 
			get { return __Cost; }
			set { __Cost = value; __CostSpecified = true; }
		}

		[XmlElement(ElementName="FireRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __FireRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __FireRangeSpecified;
		
		[XmlIgnore]
		public short FireRange
		{ 
			get { return __FireRange; }
			set { __FireRange = value; __FireRangeSpecified = true; }
		}

		[XmlElement(ElementName="FirePower",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __FirePower;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __FirePowerSpecified;
		
		[XmlIgnore]
		public short FirePower
		{ 
			get { return __FirePower; }
			set { __FirePower = value; __FirePowerSpecified = true; }
		}

		[XmlElement(ElementName="Speed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Speed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SpeedSpecified;
		
		[XmlIgnore]
		public short Speed
		{ 
			get { return __Speed; }
			set { __Speed = value; __SpeedSpecified = true; }
		}

		[XmlElement(ElementName="ReloadTime",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ReloadTime;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ReloadTimeSpecified;
		
		[XmlIgnore]
		public short ReloadTime
		{ 
			get { return __ReloadTime; }
			set { __ReloadTime = value; __ReloadTimeSpecified = true; }
		}

		[XmlElement(ElementName="AmmoType",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __AmmoType;
		
		[XmlIgnore]
		public string AmmoType
		{ 
			get { return __AmmoType; }
			set { __AmmoType = value; }
		}

		[XmlElement(ElementName="Health",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Health;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __HealthSpecified;
		
		[XmlIgnore]
		public short Health
		{ 
			get { return __Health; }
			set { __Health = value; __HealthSpecified = true; }
		}

		[XmlElement(ElementName="ViewRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ViewRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ViewRangeSpecified;
		
		[XmlIgnore]
		public short ViewRange
		{ 
			get { return __ViewRange; }
			set { __ViewRange = value; __ViewRangeSpecified = true; }
		}

		[XmlElement(ElementName="BuildSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __BuildSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __BuildSpeedSpecified;
		
		[XmlIgnore]
		public short BuildSpeed
		{ 
			get { return __BuildSpeed; }
			set { __BuildSpeed = value; __BuildSpeedSpecified = true; }
		}

		[XmlElement(ElementName="DamageDestroy",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __DamageDestroy;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __DamageDestroySpecified;
		
		[XmlIgnore]
		public short DamageDestroy
		{ 
			get { return __DamageDestroy; }
			set { __DamageDestroy = value; __DamageDestroySpecified = true; }
		}

		[XmlElement(ElementName="RotationSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __RotationSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __RotationSpeedSpecified;
		
		[XmlIgnore]
		public short RotationSpeed
		{ 
			get { return __RotationSpeed; }
			set { __RotationSpeed = value; __RotationSpeedSpecified = true; }
		}

		public UnitTrooperData()
		{
		}
	}


	[XmlType(TypeName="UnitTankData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitTankData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="TypeKind",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeKind;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeKindSpecified;
		
		[XmlIgnore]
		public short TypeKind
		{ 
			get { return __TypeKind; }
			set { __TypeKind = value; __TypeKindSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(ElementName="Cost",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Cost;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CostSpecified;
		
		[XmlIgnore]
		public short Cost
		{ 
			get { return __Cost; }
			set { __Cost = value; __CostSpecified = true; }
		}

		[XmlElement(ElementName="FireRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __FireRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __FireRangeSpecified;
		
		[XmlIgnore]
		public short FireRange
		{ 
			get { return __FireRange; }
			set { __FireRange = value; __FireRangeSpecified = true; }
		}

		[XmlElement(ElementName="FirePower",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __FirePower;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __FirePowerSpecified;
		
		[XmlIgnore]
		public short FirePower
		{ 
			get { return __FirePower; }
			set { __FirePower = value; __FirePowerSpecified = true; }
		}

		[XmlElement(ElementName="Speed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Speed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SpeedSpecified;
		
		[XmlIgnore]
		public short Speed
		{ 
			get { return __Speed; }
			set { __Speed = value; __SpeedSpecified = true; }
		}

		[XmlElement(ElementName="ReloadTime",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ReloadTime;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ReloadTimeSpecified;
		
		[XmlIgnore]
		public short ReloadTime
		{ 
			get { return __ReloadTime; }
			set { __ReloadTime = value; __ReloadTimeSpecified = true; }
		}

		[XmlElement(ElementName="AmmoType",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __AmmoType;
		
		[XmlIgnore]
		public string AmmoType
		{ 
			get { return __AmmoType; }
			set { __AmmoType = value; }
		}

		[XmlElement(ElementName="Health",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Health;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __HealthSpecified;
		
		[XmlIgnore]
		public short Health
		{ 
			get { return __Health; }
			set { __Health = value; __HealthSpecified = true; }
		}

		[XmlElement(ElementName="ViewRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ViewRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ViewRangeSpecified;
		
		[XmlIgnore]
		public short ViewRange
		{ 
			get { return __ViewRange; }
			set { __ViewRange = value; __ViewRangeSpecified = true; }
		}

		[XmlElement(ElementName="BuildSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __BuildSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __BuildSpeedSpecified;
		
		[XmlIgnore]
		public short BuildSpeed
		{ 
			get { return __BuildSpeed; }
			set { __BuildSpeed = value; __BuildSpeedSpecified = true; }
		}

		[XmlElement(ElementName="DamageDestroy",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __DamageDestroy;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __DamageDestroySpecified;
		
		[XmlIgnore]
		public short DamageDestroy
		{ 
			get { return __DamageDestroy; }
			set { __DamageDestroy = value; __DamageDestroySpecified = true; }
		}

		[XmlElement(ElementName="RotationSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __RotationSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __RotationSpeedSpecified;
		
		[XmlIgnore]
		public short RotationSpeed
		{ 
			get { return __RotationSpeed; }
			set { __RotationSpeed = value; __RotationSpeedSpecified = true; }
		}

		[XmlElement(ElementName="TurretRotationSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TurretRotationSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TurretRotationSpeedSpecified;
		
		[XmlIgnore]
		public short TurretRotationSpeed
		{ 
			get { return __TurretRotationSpeed; }
			set { __TurretRotationSpeed = value; __TurretRotationSpeedSpecified = true; }
		}

		public UnitTankData()
		{
		}
	}


	[XmlType(TypeName="UnitHarvesterData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitHarvesterData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="TypeKind",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeKind;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeKindSpecified;
		
		[XmlIgnore]
		public short TypeKind
		{ 
			get { return __TypeKind; }
			set { __TypeKind = value; __TypeKindSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(ElementName="Cost",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Cost;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CostSpecified;
		
		[XmlIgnore]
		public short Cost
		{ 
			get { return __Cost; }
			set { __Cost = value; __CostSpecified = true; }
		}

		[XmlElement(ElementName="Speed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Speed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SpeedSpecified;
		
		[XmlIgnore]
		public short Speed
		{ 
			get { return __Speed; }
			set { __Speed = value; __SpeedSpecified = true; }
		}

		[XmlElement(ElementName="Health",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Health;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __HealthSpecified;
		
		[XmlIgnore]
		public short Health
		{ 
			get { return __Health; }
			set { __Health = value; __HealthSpecified = true; }
		}

		[XmlElement(ElementName="ViewRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ViewRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ViewRangeSpecified;
		
		[XmlIgnore]
		public short ViewRange
		{ 
			get { return __ViewRange; }
			set { __ViewRange = value; __ViewRangeSpecified = true; }
		}

		[XmlElement(ElementName="BuildSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __BuildSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __BuildSpeedSpecified;
		
		[XmlIgnore]
		public short BuildSpeed
		{ 
			get { return __BuildSpeed; }
			set { __BuildSpeed = value; __BuildSpeedSpecified = true; }
		}

		[XmlElement(ElementName="DamageDestroy",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __DamageDestroy;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __DamageDestroySpecified;
		
		[XmlIgnore]
		public short DamageDestroy
		{ 
			get { return __DamageDestroy; }
			set { __DamageDestroy = value; __DamageDestroySpecified = true; }
		}

		[XmlElement(ElementName="RotationSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __RotationSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __RotationSpeedSpecified;
		
		[XmlIgnore]
		public short RotationSpeed
		{ 
			get { return __RotationSpeed; }
			set { __RotationSpeed = value; __RotationSpeedSpecified = true; }
		}

		[XmlElement(ElementName="Capacity",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Capacity;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CapacitySpecified;
		
		[XmlIgnore]
		public short Capacity
		{ 
			get { return __Capacity; }
			set { __Capacity = value; __CapacitySpecified = true; }
		}

		[XmlElement(ElementName="HarvestingSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __HarvestingSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __HarvestingSpeedSpecified;
		
		[XmlIgnore]
		public short HarvestingSpeed
		{ 
			get { return __HarvestingSpeed; }
			set { __HarvestingSpeed = value; __HarvestingSpeedSpecified = true; }
		}

		public UnitHarvesterData()
		{
		}
	}


	[XmlType(TypeName="UnitMCVData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitMCVData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="TypeKind",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeKind;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeKindSpecified;
		
		[XmlIgnore]
		public short TypeKind
		{ 
			get { return __TypeKind; }
			set { __TypeKind = value; __TypeKindSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(ElementName="Cost",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Cost;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CostSpecified;
		
		[XmlIgnore]
		public short Cost
		{ 
			get { return __Cost; }
			set { __Cost = value; __CostSpecified = true; }
		}

		[XmlElement(ElementName="Speed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Speed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SpeedSpecified;
		
		[XmlIgnore]
		public short Speed
		{ 
			get { return __Speed; }
			set { __Speed = value; __SpeedSpecified = true; }
		}

		[XmlElement(ElementName="Health",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Health;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __HealthSpecified;
		
		[XmlIgnore]
		public short Health
		{ 
			get { return __Health; }
			set { __Health = value; __HealthSpecified = true; }
		}

		[XmlElement(ElementName="ViewRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ViewRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ViewRangeSpecified;
		
		[XmlIgnore]
		public short ViewRange
		{ 
			get { return __ViewRange; }
			set { __ViewRange = value; __ViewRangeSpecified = true; }
		}

		[XmlElement(ElementName="BuildSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __BuildSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __BuildSpeedSpecified;
		
		[XmlIgnore]
		public short BuildSpeed
		{ 
			get { return __BuildSpeed; }
			set { __BuildSpeed = value; __BuildSpeedSpecified = true; }
		}

		[XmlElement(ElementName="DamageDestroy",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __DamageDestroy;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __DamageDestroySpecified;
		
		[XmlIgnore]
		public short DamageDestroy
		{ 
			get { return __DamageDestroy; }
			set { __DamageDestroy = value; __DamageDestroySpecified = true; }
		}

		[XmlElement(ElementName="RotationSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __RotationSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __RotationSpeedSpecified;
		
		[XmlIgnore]
		public short RotationSpeed
		{ 
			get { return __RotationSpeed; }
			set { __RotationSpeed = value; __RotationSpeedSpecified = true; }
		}

		[XmlElement(ElementName="BuildingCanProduce",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __BuildingCanProduce;
		
		[XmlIgnore]
		public string BuildingCanProduce
		{ 
			get { return __BuildingCanProduce; }
			set { __BuildingCanProduce = value; }
		}

		public UnitMCVData()
		{
		}
	}


	[XmlType(TypeName="UnitSandwormData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitSandwormData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="TypeKind",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeKind;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeKindSpecified;
		
		[XmlIgnore]
		public short TypeKind
		{ 
			get { return __TypeKind; }
			set { __TypeKind = value; __TypeKindSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(ElementName="Speed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Speed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SpeedSpecified;
		
		[XmlIgnore]
		public short Speed
		{ 
			get { return __Speed; }
			set { __Speed = value; __SpeedSpecified = true; }
		}

		[XmlElement(ElementName="Health",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Health;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __HealthSpecified;
		
		[XmlIgnore]
		public short Health
		{ 
			get { return __Health; }
			set { __Health = value; __HealthSpecified = true; }
		}

		[XmlElement(ElementName="FirePower",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __FirePower;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __FirePowerSpecified;
		
		[XmlIgnore]
		public short FirePower
		{ 
			get { return __FirePower; }
			set { __FirePower = value; __FirePowerSpecified = true; }
		}

		[XmlElement(ElementName="DamageDestroy",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __DamageDestroy;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __DamageDestroySpecified;
		
		[XmlIgnore]
		public short DamageDestroy
		{ 
			get { return __DamageDestroy; }
			set { __DamageDestroy = value; __DamageDestroySpecified = true; }
		}

		[XmlElement(ElementName="RotationSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __RotationSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __RotationSpeedSpecified;
		
		[XmlIgnore]
		public short RotationSpeed
		{ 
			get { return __RotationSpeed; }
			set { __RotationSpeed = value; __RotationSpeedSpecified = true; }
		}

		public UnitSandwormData()
		{
		}
	}


	[XmlType(TypeName="BuildingData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class BuildingData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(ElementName="Cost",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Cost;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CostSpecified;
		
		[XmlIgnore]
		public short Cost
		{ 
			get { return __Cost; }
			set { __Cost = value; __CostSpecified = true; }
		}

		[XmlElement(ElementName="Health",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Health;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __HealthSpecified;
		
		[XmlIgnore]
		public short Health
		{ 
			get { return __Health; }
			set { __Health = value; __HealthSpecified = true; }
		}

		[XmlElement(ElementName="ViewRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ViewRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ViewRangeSpecified;
		
		[XmlIgnore]
		public short ViewRange
		{ 
			get { return __ViewRange; }
			set { __ViewRange = value; __ViewRangeSpecified = true; }
		}

		[XmlElement(ElementName="BuildSpeed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __BuildSpeed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __BuildSpeedSpecified;
		
		[XmlIgnore]
		public short BuildSpeed
		{ 
			get { return __BuildSpeed; }
			set { __BuildSpeed = value; __BuildSpeedSpecified = true; }
		}

		[XmlElement(Type=typeof(Yad.Config.Common.Size),ElementName="Size",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.Size __Size;
		
		[XmlIgnore]
		public Yad.Config.Common.Size Size
		{
			get
			{
				if (__Size == null) __Size = new Yad.Config.Common.Size();		
				return __Size;
			}
			set {__Size = value;}
		}

		[XmlElement(ElementName="EnergyConsumption",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="int",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public int __EnergyConsumption;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __EnergyConsumptionSpecified;
		
		[XmlIgnore]
		public int EnergyConsumption
		{ 
			get { return __EnergyConsumption; }
			set { __EnergyConsumption = value; __EnergyConsumptionSpecified = true; }
		}

		[XmlElement(ElementName="TextureSpecialActionFramesCount",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TextureSpecialActionFramesCount;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TextureSpecialActionFramesCountSpecified;
		
		[XmlIgnore]
		public short TextureSpecialActionFramesCount
		{ 
			get { return __TextureSpecialActionFramesCount; }
			set { __TextureSpecialActionFramesCount = value; __TextureSpecialActionFramesCountSpecified = true; }
		}

		[XmlElement(ElementName="TextureAnimationFramesCount",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TextureAnimationFramesCount;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TextureAnimationFramesCountSpecified;
		
		[XmlIgnore]
		public short TextureAnimationFramesCount
		{ 
			get { return __TextureAnimationFramesCount; }
			set { __TextureAnimationFramesCount = value; __TextureAnimationFramesCountSpecified = true; }
		}

		[XmlElement(ElementName="IsTurret",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="boolean",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IsTurret;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IsTurretSpecified;
		
		[XmlIgnore]
		public bool IsTurret
		{ 
			get { return __IsTurret; }
			set { __IsTurret = value; __IsTurretSpecified = true; }
		}

		[XmlElement(ElementName="FireRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __FireRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __FireRangeSpecified;
		
		[XmlIgnore]
		public short FireRange
		{ 
			get { return __FireRange; }
			set { __FireRange = value; __FireRangeSpecified = true; }
		}

		[XmlElement(ElementName="FirePower",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __FirePower;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __FirePowerSpecified;
		
		[XmlIgnore]
		public short FirePower
		{ 
			get { return __FirePower; }
			set { __FirePower = value; __FirePowerSpecified = true; }
		}

		[XmlElement(ElementName="ReloadTime",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __ReloadTime;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ReloadTimeSpecified;
		
		[XmlIgnore]
		public short ReloadTime
		{ 
			get { return __ReloadTime; }
			set { __ReloadTime = value; __ReloadTimeSpecified = true; }
		}

		[XmlElement(Type=typeof(Yad.Config.Common.RideableFields),ElementName="RideableFields",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.RideableFields __RideableFields;
		
		[XmlIgnore]
		public Yad.Config.Common.RideableFields RideableFields
		{
			get
			{
				if (__RideableFields == null) __RideableFields = new Yad.Config.Common.RideableFields();		
				return __RideableFields;
			}
			set {__RideableFields = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.UnitsNames),ElementName="UnitsCanProduce",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.UnitsNames __UnitsCanProduce;
		
		[XmlIgnore]
		public Yad.Config.Common.UnitsNames UnitsCanProduce
		{
			get
			{
				if (__UnitsCanProduce == null) __UnitsCanProduce = new Yad.Config.Common.UnitsNames();		
				return __UnitsCanProduce;
			}
			set {__UnitsCanProduce = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.BuildingsNames),ElementName="BuildingsCanProduce",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.BuildingsNames __BuildingsCanProduce;
		
		[XmlIgnore]
		public Yad.Config.Common.BuildingsNames BuildingsCanProduce
		{
			get
			{
				if (__BuildingsCanProduce == null) __BuildingsCanProduce = new Yad.Config.Common.BuildingsNames();		
				return __BuildingsCanProduce;
			}
			set {__BuildingsCanProduce = value;}
		}

		public BuildingData()
		{
		}
	}


	[XmlType(TypeName="AmmoData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class AmmoData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(ElementName="Speed",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Speed;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SpeedSpecified;
		
		[XmlIgnore]
		public short Speed
		{ 
			get { return __Speed; }
			set { __Speed = value; __SpeedSpecified = true; }
		}

		[XmlElement(ElementName="DamageDestroyRange",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __DamageDestroyRange;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __DamageDestroyRangeSpecified;
		
		[XmlIgnore]
		public short DamageDestroyRange
		{ 
			get { return __DamageDestroyRange; }
			set { __DamageDestroyRange = value; __DamageDestroyRangeSpecified = true; }
		}

		public AmmoData()
		{
		}
	}


	[XmlType(TypeName="RaceData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class RaceData
	{

		[XmlElement(ElementName="TypeID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __TypeID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TypeIDSpecified;
		
		[XmlIgnore]
		public short TypeID
		{ 
			get { return __TypeID; }
			set { __TypeID = value; __TypeIDSpecified = true; }
		}

		[XmlElement(ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Name;
		
		[XmlIgnore]
		public string Name
		{ 
			get { return __Name; }
			set { __Name = value; }
		}

		[XmlElement(Type=typeof(Yad.Config.Common.TechnologyDependences),ElementName="TechnologyDependences",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.TechnologyDependences __TechnologyDependences;
		
		[XmlIgnore]
		public Yad.Config.Common.TechnologyDependences TechnologyDependences
		{
			get
			{
				if (__TechnologyDependences == null) __TechnologyDependences = new Yad.Config.Common.TechnologyDependences();		
				return __TechnologyDependences;
			}
			set {__TechnologyDependences = value;}
		}

		public RaceData()
		{
		}
	}


	[XmlType(TypeName="UnitTroopersData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitTroopersData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return UnitTrooperDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.UnitTrooperData Add(Yad.Config.Common.UnitTrooperData obj)
		{
			return UnitTrooperDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.UnitTrooperData this[int index]
		{
			get { return (Yad.Config.Common.UnitTrooperData) UnitTrooperDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return UnitTrooperDataCollection.Count; }
        }

        public void Clear()
		{
			UnitTrooperDataCollection.Clear();
        }

		public Yad.Config.Common.UnitTrooperData Remove(int index) 
		{ 
            Yad.Config.Common.UnitTrooperData obj = UnitTrooperDataCollection[index];
            UnitTrooperDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            UnitTrooperDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.UnitTrooperData),ElementName="UnitTrooperData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public UnitTrooperDataCollection __UnitTrooperDataCollection;
		
		[XmlIgnore]
		public UnitTrooperDataCollection UnitTrooperDataCollection
		{
			get
			{
				if (__UnitTrooperDataCollection == null) __UnitTrooperDataCollection = new UnitTrooperDataCollection();
				return __UnitTrooperDataCollection;
			}
			set {__UnitTrooperDataCollection = value;}
		}

		public UnitTroopersData()
		{
		}
	}


	[XmlType(TypeName="UnitTanksData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitTanksData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return UnitTankDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.UnitTankData Add(Yad.Config.Common.UnitTankData obj)
		{
			return UnitTankDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.UnitTankData this[int index]
		{
			get { return (Yad.Config.Common.UnitTankData) UnitTankDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return UnitTankDataCollection.Count; }
        }

        public void Clear()
		{
			UnitTankDataCollection.Clear();
        }

		public Yad.Config.Common.UnitTankData Remove(int index) 
		{ 
            Yad.Config.Common.UnitTankData obj = UnitTankDataCollection[index];
            UnitTankDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            UnitTankDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.UnitTankData),ElementName="UnitTankData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public UnitTankDataCollection __UnitTankDataCollection;
		
		[XmlIgnore]
		public UnitTankDataCollection UnitTankDataCollection
		{
			get
			{
				if (__UnitTankDataCollection == null) __UnitTankDataCollection = new UnitTankDataCollection();
				return __UnitTankDataCollection;
			}
			set {__UnitTankDataCollection = value;}
		}

		public UnitTanksData()
		{
		}
	}


	[XmlType(TypeName="UnitHarvestersData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitHarvestersData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return UnitHarvesterDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.UnitHarvesterData Add(Yad.Config.Common.UnitHarvesterData obj)
		{
			return UnitHarvesterDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.UnitHarvesterData this[int index]
		{
			get { return (Yad.Config.Common.UnitHarvesterData) UnitHarvesterDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return UnitHarvesterDataCollection.Count; }
        }

        public void Clear()
		{
			UnitHarvesterDataCollection.Clear();
        }

		public Yad.Config.Common.UnitHarvesterData Remove(int index) 
		{ 
            Yad.Config.Common.UnitHarvesterData obj = UnitHarvesterDataCollection[index];
            UnitHarvesterDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            UnitHarvesterDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.UnitHarvesterData),ElementName="UnitHarvesterData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public UnitHarvesterDataCollection __UnitHarvesterDataCollection;
		
		[XmlIgnore]
		public UnitHarvesterDataCollection UnitHarvesterDataCollection
		{
			get
			{
				if (__UnitHarvesterDataCollection == null) __UnitHarvesterDataCollection = new UnitHarvesterDataCollection();
				return __UnitHarvesterDataCollection;
			}
			set {__UnitHarvesterDataCollection = value;}
		}

		public UnitHarvestersData()
		{
		}
	}


	[XmlType(TypeName="UnitMCVsData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitMCVsData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return UnitMCVDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.UnitMCVData Add(Yad.Config.Common.UnitMCVData obj)
		{
			return UnitMCVDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.UnitMCVData this[int index]
		{
			get { return (Yad.Config.Common.UnitMCVData) UnitMCVDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return UnitMCVDataCollection.Count; }
        }

        public void Clear()
		{
			UnitMCVDataCollection.Clear();
        }

		public Yad.Config.Common.UnitMCVData Remove(int index) 
		{ 
            Yad.Config.Common.UnitMCVData obj = UnitMCVDataCollection[index];
            UnitMCVDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            UnitMCVDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.UnitMCVData),ElementName="UnitMCVData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public UnitMCVDataCollection __UnitMCVDataCollection;
		
		[XmlIgnore]
		public UnitMCVDataCollection UnitMCVDataCollection
		{
			get
			{
				if (__UnitMCVDataCollection == null) __UnitMCVDataCollection = new UnitMCVDataCollection();
				return __UnitMCVDataCollection;
			}
			set {__UnitMCVDataCollection = value;}
		}

		public UnitMCVsData()
		{
		}
	}


	[XmlType(TypeName="UnitSandwormsData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitSandwormsData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return UnitSandwormDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.UnitSandwormData Add(Yad.Config.Common.UnitSandwormData obj)
		{
			return UnitSandwormDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.UnitSandwormData this[int index]
		{
			get { return (Yad.Config.Common.UnitSandwormData) UnitSandwormDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return UnitSandwormDataCollection.Count; }
        }

        public void Clear()
		{
			UnitSandwormDataCollection.Clear();
        }

		public Yad.Config.Common.UnitSandwormData Remove(int index) 
		{ 
            Yad.Config.Common.UnitSandwormData obj = UnitSandwormDataCollection[index];
            UnitSandwormDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            UnitSandwormDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.UnitSandwormData),ElementName="UnitSandwormData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public UnitSandwormDataCollection __UnitSandwormDataCollection;
		
		[XmlIgnore]
		public UnitSandwormDataCollection UnitSandwormDataCollection
		{
			get
			{
				if (__UnitSandwormDataCollection == null) __UnitSandwormDataCollection = new UnitSandwormDataCollection();
				return __UnitSandwormDataCollection;
			}
			set {__UnitSandwormDataCollection = value;}
		}

		public UnitSandwormsData()
		{
		}
	}


	[XmlType(TypeName="BuildingsData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class BuildingsData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return BuildingDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.BuildingData Add(Yad.Config.Common.BuildingData obj)
		{
			return BuildingDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.BuildingData this[int index]
		{
			get { return (Yad.Config.Common.BuildingData) BuildingDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return BuildingDataCollection.Count; }
        }

        public void Clear()
		{
			BuildingDataCollection.Clear();
        }

		public Yad.Config.Common.BuildingData Remove(int index) 
		{ 
            Yad.Config.Common.BuildingData obj = BuildingDataCollection[index];
            BuildingDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            BuildingDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.BuildingData),ElementName="BuildingData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public BuildingDataCollection __BuildingDataCollection;
		
		[XmlIgnore]
		public BuildingDataCollection BuildingDataCollection
		{
			get
			{
				if (__BuildingDataCollection == null) __BuildingDataCollection = new BuildingDataCollection();
				return __BuildingDataCollection;
			}
			set {__BuildingDataCollection = value;}
		}

		public BuildingsData()
		{
		}
	}


	[XmlType(TypeName="AmmosData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class AmmosData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return AmmoDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.AmmoData Add(Yad.Config.Common.AmmoData obj)
		{
			return AmmoDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.AmmoData this[int index]
		{
			get { return (Yad.Config.Common.AmmoData) AmmoDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return AmmoDataCollection.Count; }
        }

        public void Clear()
		{
			AmmoDataCollection.Clear();
        }

		public Yad.Config.Common.AmmoData Remove(int index) 
		{ 
            Yad.Config.Common.AmmoData obj = AmmoDataCollection[index];
            AmmoDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            AmmoDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.AmmoData),ElementName="AmmoData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public AmmoDataCollection __AmmoDataCollection;
		
		[XmlIgnore]
		public AmmoDataCollection AmmoDataCollection
		{
			get
			{
				if (__AmmoDataCollection == null) __AmmoDataCollection = new AmmoDataCollection();
				return __AmmoDataCollection;
			}
			set {__AmmoDataCollection = value;}
		}

		public AmmosData()
		{
		}
	}


	[XmlType(TypeName="RacesData",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class RacesData
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return RaceDataCollection.GetEnumerator();
		}

		public Yad.Config.Common.RaceData Add(Yad.Config.Common.RaceData obj)
		{
			return RaceDataCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.RaceData this[int index]
		{
			get { return (Yad.Config.Common.RaceData) RaceDataCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return RaceDataCollection.Count; }
        }

        public void Clear()
		{
			RaceDataCollection.Clear();
        }

		public Yad.Config.Common.RaceData Remove(int index) 
		{ 
            Yad.Config.Common.RaceData obj = RaceDataCollection[index];
            RaceDataCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            RaceDataCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.RaceData),ElementName="RaceData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public RaceDataCollection __RaceDataCollection;
		
		[XmlIgnore]
		public RaceDataCollection RaceDataCollection
		{
			get
			{
				if (__RaceDataCollection == null) __RaceDataCollection = new RaceDataCollection();
				return __RaceDataCollection;
			}
			set {__RaceDataCollection = value;}
		}

		public RacesData()
		{
		}
	}


	[XmlType(TypeName="TechnologyDependences",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class TechnologyDependences
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return TechnologyDependenceCollection.GetEnumerator();
		}

		public Yad.Config.Common.TechnologyDependence Add(Yad.Config.Common.TechnologyDependence obj)
		{
			return TechnologyDependenceCollection.Add(obj);
		}

		[XmlIgnore]
		public Yad.Config.Common.TechnologyDependence this[int index]
		{
			get { return (Yad.Config.Common.TechnologyDependence) TechnologyDependenceCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return TechnologyDependenceCollection.Count; }
        }

        public void Clear()
		{
			TechnologyDependenceCollection.Clear();
        }

		public Yad.Config.Common.TechnologyDependence Remove(int index) 
		{ 
            Yad.Config.Common.TechnologyDependence obj = TechnologyDependenceCollection[index];
            TechnologyDependenceCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            TechnologyDependenceCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Yad.Config.Common.TechnologyDependence),ElementName="TechnologyDependence",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public TechnologyDependenceCollection __TechnologyDependenceCollection;
		
		[XmlIgnore]
		public TechnologyDependenceCollection TechnologyDependenceCollection
		{
			get
			{
				if (__TechnologyDependenceCollection == null) __TechnologyDependenceCollection = new TechnologyDependenceCollection();
				return __TechnologyDependenceCollection;
			}
			set {__TechnologyDependenceCollection = value;}
		}

		public TechnologyDependences()
		{
		}
	}


	[XmlType(TypeName="TechnologyDependence",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class TechnologyDependence
	{

		[XmlElement(ElementName="BuildingName",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __BuildingName;
		
		[XmlIgnore]
		public string BuildingName
		{ 
			get { return __BuildingName; }
			set { __BuildingName = value; }
		}

		[XmlElement(Type=typeof(Yad.Config.Common.BuildingsNames),ElementName="RequiredBuildings",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.BuildingsNames __RequiredBuildings;
		
		[XmlIgnore]
		public Yad.Config.Common.BuildingsNames RequiredBuildings
		{
			get
			{
				if (__RequiredBuildings == null) __RequiredBuildings = new Yad.Config.Common.BuildingsNames();		
				return __RequiredBuildings;
			}
			set {__RequiredBuildings = value;}
		}

		public TechnologyDependence()
		{
		}
	}


	[XmlType(TypeName="BuildingsNames",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class BuildingsNames
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return NameCollection.GetEnumerator();
		}

		public string Add(string obj)
		{
			return NameCollection.Add(obj);
		}

		[XmlIgnore]
		public string this[int index]
		{
			get { return (string) NameCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return NameCollection.Count; }
        }

        public void Clear()
		{
			NameCollection.Clear();
        }

		public string Remove(int index) 
		{ 
            string obj = NameCollection[index];
            NameCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            NameCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(string),ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public NameCollection __NameCollection;
		
		[XmlIgnore]
		public NameCollection NameCollection
		{
			get
			{
				if (__NameCollection == null) __NameCollection = new NameCollection();
				return __NameCollection;
			}
			set {__NameCollection = value;}
		}

		public BuildingsNames()
		{
		}
	}


	[XmlType(TypeName="Size",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class Size
	{

		[XmlElement(ElementName="X",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __X;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __XSpecified;
		
		[XmlIgnore]
		public short X
		{ 
			get { return __X; }
			set { __X = value; __XSpecified = true; }
		}

		[XmlElement(ElementName="Y",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public short __Y;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __YSpecified;
		
		[XmlIgnore]
		public short Y
		{ 
			get { return __Y; }
			set { __Y = value; __YSpecified = true; }
		}

		public Size()
		{
		}
	}


	[XmlType(TypeName="RideableFields",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class RideableFields
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return indexCollection.GetEnumerator();
		}

		public short Add(short obj)
		{
			return indexCollection.Add(obj);
		}

		[XmlIgnore]
		public short this[int index]
		{
			get { return (short) indexCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return indexCollection.Count; }
        }

        public void Clear()
		{
			indexCollection.Clear();
        }

		public short Remove(int index) 
		{ 
            short obj = indexCollection[index];
            indexCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            indexCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(short),ElementName="index",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="short",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public indexCollection __indexCollection;
		
		[XmlIgnore]
		public indexCollection indexCollection
		{
			get
			{
				if (__indexCollection == null) __indexCollection = new indexCollection();
				return __indexCollection;
			}
			set {__indexCollection = value;}
		}

		public RideableFields()
		{
		}
	}


	[XmlType(TypeName="UnitsNames",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class UnitsNames
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return NameCollection.GetEnumerator();
		}

		public string Add(string obj)
		{
			return NameCollection.Add(obj);
		}

		[XmlIgnore]
		public string this[int index]
		{
			get { return (string) NameCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return NameCollection.Count; }
        }

        public void Clear()
		{
			NameCollection.Clear();
        }

		public string Remove(int index) 
		{ 
            string obj = NameCollection[index];
            NameCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            NameCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(string),ElementName="Name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public NameCollection __NameCollection;
		
		[XmlIgnore]
		public NameCollection NameCollection
		{
			get
			{
				if (__NameCollection == null) __NameCollection = new NameCollection();
				return __NameCollection;
			}
			set {__NameCollection = value;}
		}

		public UnitsNames()
		{
		}
	}


	[XmlRoot(ElementName="GameSettings",Namespace=Declarations.SchemaVersion,IsNullable=false),Serializable]
	[XmlType(TypeName="GameSettings",Namespace=Declarations.SchemaVersion)]
	public class GameSettings
	{

		[XmlElement(Type=typeof(Yad.Config.Common.UnitTroopersData),ElementName="UnitTroopersData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.UnitTroopersData __UnitTroopersData;
		
		[XmlIgnore]
		public Yad.Config.Common.UnitTroopersData UnitTroopersData
		{
			get
			{
				if (__UnitTroopersData == null) __UnitTroopersData = new Yad.Config.Common.UnitTroopersData();		
				return __UnitTroopersData;
			}
			set {__UnitTroopersData = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.UnitTanksData),ElementName="UnitTanksData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.UnitTanksData __UnitTanksData;
		
		[XmlIgnore]
		public Yad.Config.Common.UnitTanksData UnitTanksData
		{
			get
			{
				if (__UnitTanksData == null) __UnitTanksData = new Yad.Config.Common.UnitTanksData();		
				return __UnitTanksData;
			}
			set {__UnitTanksData = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.UnitHarvestersData),ElementName="UnitHarvestersData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.UnitHarvestersData __UnitHarvestersData;
		
		[XmlIgnore]
		public Yad.Config.Common.UnitHarvestersData UnitHarvestersData
		{
			get
			{
				if (__UnitHarvestersData == null) __UnitHarvestersData = new Yad.Config.Common.UnitHarvestersData();		
				return __UnitHarvestersData;
			}
			set {__UnitHarvestersData = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.UnitMCVsData),ElementName="UnitMCVsData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.UnitMCVsData __UnitMCVsData;
		
		[XmlIgnore]
		public Yad.Config.Common.UnitMCVsData UnitMCVsData
		{
			get
			{
				if (__UnitMCVsData == null) __UnitMCVsData = new Yad.Config.Common.UnitMCVsData();		
				return __UnitMCVsData;
			}
			set {__UnitMCVsData = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.UnitSandwormsData),ElementName="UnitSandwormsData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.UnitSandwormsData __UnitSandwormsData;
		
		[XmlIgnore]
		public Yad.Config.Common.UnitSandwormsData UnitSandwormsData
		{
			get
			{
				if (__UnitSandwormsData == null) __UnitSandwormsData = new Yad.Config.Common.UnitSandwormsData();		
				return __UnitSandwormsData;
			}
			set {__UnitSandwormsData = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.AmmosData),ElementName="AmmosData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.AmmosData __AmmosData;
		
		[XmlIgnore]
		public Yad.Config.Common.AmmosData AmmosData
		{
			get
			{
				if (__AmmosData == null) __AmmosData = new Yad.Config.Common.AmmosData();		
				return __AmmosData;
			}
			set {__AmmosData = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.BuildingsData),ElementName="BuildingsData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.BuildingsData __BuildingsData;
		
		[XmlIgnore]
		public Yad.Config.Common.BuildingsData BuildingsData
		{
			get
			{
				if (__BuildingsData == null) __BuildingsData = new Yad.Config.Common.BuildingsData();		
				return __BuildingsData;
			}
			set {__BuildingsData = value;}
		}

		[XmlElement(Type=typeof(Yad.Config.Common.RacesData),ElementName="RacesData",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Yad.Config.Common.RacesData __RacesData;
		
		[XmlIgnore]
		public Yad.Config.Common.RacesData RacesData
		{
			get
			{
				if (__RacesData == null) __RacesData = new Yad.Config.Common.RacesData();		
				return __RacesData;
			}
			set {__RacesData = value;}
		}

		public GameSettings()
		{
		}
	}
}
